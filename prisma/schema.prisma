// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database/gym.db"
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("admins")
}

model Member {
  id             Int      @id @default(autoincrement())
  name           String
  phone          String?  @unique
  email          String?
  membershipType String   @map("membership_type")
  startDate      DateTime @map("start_date")
  endDate        DateTime @map("end_date")
  isActive       Boolean  @default(true) @map("is_active")
  notes          String?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  transactions      Transaction[]
  membershipPeriods MembershipPeriod[]

  @@map("members")
}

model MembershipPackage {
  id              Int     @id @default(autoincrement())
  name            String
  durationMonths  Int     @map("duration_months")
  price           Float?
  description     String?
  isActive        Boolean @default(true) @map("is_active")
  createdAt       DateTime @default(now()) @map("created_at")

  transactions    Transaction[]

  @@map("membership_packages")
}

model PaymentMethod {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")

  transactions Transaction[]

  @@map("payment_methods")
}

model Transaction {
  id              Int           @id @default(autoincrement())
  memberId        Int           @map("member_id")
  packageId       Int           @map("package_id")
  paymentMethodId Int           @map("payment_method_id")
  amount          Float
  packageName     String        @map("package_name")
  packageDuration Int           @map("package_duration")
  transactionDate DateTime      @default(now()) @map("transaction_date")
  notes           String?
  createdAt       DateTime      @default(now()) @map("created_at")

  member          Member         @relation(fields: [memberId], references: [id])
  package         MembershipPackage @relation(fields: [packageId], references: [id])
  paymentMethod   PaymentMethod  @relation(fields: [paymentMethodId], references: [id])
  membershipPeriod MembershipPeriod?

  @@map("transactions")
}

model MembershipPeriod {
  id            Int       @id @default(autoincrement())
  memberId      Int       @map("member_id")
  startDate     DateTime  @map("start_date")
  endDate       DateTime  @map("end_date")
  packageName   String    @map("package_name")
  duration      Int       // months
  status        String    // "active", "expired", "canceled"
  transactionId Int?      @unique @map("transaction_id")
  createdAt     DateTime  @default(now()) @map("created_at")
  
  member        Member       @relation(fields: [memberId], references: [id])
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  
  @@map("membership_periods")
}